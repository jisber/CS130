#include <cstdio>
#include <stdio.h>

class Bitset {
	unsigned long m_value;
public:
	Bitset();	
	Bitset(unsigned long initial_value);
	bool test(int bit) const;
	void set(int bit);
	void clear(int bit);
	void reset();
	void print() const;
};
	

int main() { 

	Bitset mybs { 0b00011100111UL };
        mybs.print();
        printf("\n");

        mybs.set(44);
        mybs.set(45);
        mybs.clear(1);
        mybs.set(13);
        mybs.clear(14);
        mybs.print();
        printf("\n");

        mybs.reset();
        mybs.print();
        printf("\n");{ 

		}
	
	return 0;
		
}
Bitset::Bitset() {

}

Bitset::Bitset(unsigned long initial_value) {
	
	m_value = initial_value;
}

bool Bitset::test(int bit) const {
	
	((m_value << bit) & 1) == 1; 
	

	if(m_value == 1) {
		return true;
	}
	else 
		return false;

	return 3;
}


void Bitset::set(int bit) {

	m_value |= 1UL << bit;

}

void Bitset::clear(int bit) {

	m_value &= ~(1UL << bit);

}

void Bitset::reset() {
	m_value = 0;
} 

void Bitset::print() const {

//	printf("test\n");
//	printf("test\n");


/*	if(m_value / 2 != 0) {
		( m_value /2);
	}
*/
	printf("%lu" , m_value);

}


